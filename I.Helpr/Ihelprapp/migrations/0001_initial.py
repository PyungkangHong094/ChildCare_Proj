# Generated by Django 3.1.2 on 2020-11-17 16:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant_List',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField(db_column='post_id')),
                ('application_id', models.IntegerField(db_column='application_id')),
            ],
            options={
                'db_table': 'applicant_list',
                'unique_together': {('post_id', 'application_id')},
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_column='user_id')),
                ('title', models.CharField(db_column='title', max_length=80)),
                ('content', models.TextField(db_column='content')),
                ('attached_file', models.FileField(upload_to='static/uploads/')),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_date', models.DateTimeField(db_column='sent_date')),
                ('sender_id', models.IntegerField(db_column='sender_id')),
                ('receiver_id', models.IntegerField(db_column='receiver_id')),
                ('message_content', models.TextField(db_column='message_content')),
                ('message_status', models.CharField(choices=[
                 ('R', 'Read'), ('U', 'Unread')], db_column='message_status', default='U', max_length=1)),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Parent_Post',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateTimeField(
                    auto_now_add=True, db_column='post_date')),
                ('writer_id', models.IntegerField(db_column='writer_id')),
                ('title', models.CharField(db_column='title', max_length=80)),
                ('content', models.TextField(db_column='content')),
                ('applicant_list', models.ForeignKey(
                    null=True, on_delete=django.db.models.deletion.CASCADE, to='Ihelprapp.applicant_list')),
            ],
            options={
                'db_table': 'parent_post',
            },
        ),
        migrations.CreateModel(
            name='Qna',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_column='title', max_length=80)),
                ('content', models.TextField(db_column='content')),
                ('answer', models.TextField(db_column='answer')),
                ('writer_id', models.IntegerField(db_column='writer_id')),
            ],
            options={
                'db_table': 'qna',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(
                    db_column='rating', decimal_places=1, max_digits=2)),
                ('reviewer_id', models.IntegerField(db_column='reviewer_id')),
                ('reviewed_user_id', models.IntegerField(
                    db_column='reviewed_user_id')),
                ('review_content', models.TextField(db_column='review_content')),
                ('after_service', models.BooleanField(
                    db_column='after_service', default=False)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Sitter_Post',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('post_date', models.DateTimeField(
                    auto_now_add=True, db_column='post_date')),
                ('writer_id', models.IntegerField(db_column='writer_id')),
                ('title', models.CharField(db_column='title', max_length=80)),
                ('content', models.TextField(db_column='content')),
                ('application', models.OneToOneField(
                    on_delete=django.db.models.deletion.DO_NOTHING, to='Ihelprapp.application')),
            ],
            options={
                'db_table': 'sitter_post',
            },
        ),
        migrations.CreateModel(
            name='Work_Condition',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_service', models.CharField(choices=[('H', 'House Sitter'), ('P', 'Play Sitter'), (
                    'L', 'Learning Sitter'), ('D', 'Day Care'), ('E', 'Else')], db_column='type_of_service', max_length=1)),
                ('work_period', models.CharField(choices=[('S', 'Short (one day to one month)'), (
                    'M', 'Medium (one month to six months)'), ('L', 'Long (six months to one year)')], db_column='work_period', max_length=1)),
                ('begin_work_time', models.TimeField(db_column='begin_work_time')),
                ('end_work_time', models.TimeField(db_column='end_work_time')),
                ('location', models.CharField(db_column='location', max_length=80)),
                ('gender', models.CharField(choices=[
                 ('F', 'Female'), ('M', 'Male'), ('E', 'Else')], db_column='gender', max_length=1)),
                ('payrate', models.IntegerField(db_column='payrate')),
            ],
            options={
                'db_table': 'work_Condition',
            },
        ),
        migrations.CreateModel(
            name='Sitter_user',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=25)),
                ('email', models.EmailField(
                    db_column='email', max_length=254, unique=True)),
                ('contact_num', models.CharField(
                    db_column='contact_num', max_length=25)),
                ('gender', models.CharField(choices=[
                 ('F', 'Female'), ('M', 'Male')], db_column='gender', max_length=1)),
                ('b_date', models.DateTimeField(db_column='b_date')),
                ('cctv', models.BooleanField(db_column='cctv', default=False)),
                ('crime_history', models.BooleanField(
                    db_column='crime_history', default=False)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                  related_name='sitter_user_by_application', to='Ihelprapp.application')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                           related_name='post_by_sitter_user', to='Ihelprapp.sitter_post')),
            ],
            options={
                'db_table': 'sitter_user',
            },
        ),
        migrations.AddField(
            model_name='sitter_post',
            name='work_condition',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to='Ihelprapp.work_condition'),
        ),
        migrations.CreateModel(
            name='Parent_user',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='name', max_length=25)),
                ('email', models.EmailField(
                    db_column='email', max_length=254, unique=True)),
                ('contact_num', models.CharField(
                    db_column='contact_num', max_length=25)),
                ('children_info', models.CharField(
                    db_column='children_info', max_length=400)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                           related_name='post_by_parent_user', to='Ihelprapp.parent_post')),
            ],
            options={
                'db_table': 'parent_user',
            },
        ),
        migrations.AddField(
            model_name='parent_post',
            name='work_condition',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to='Ihelprapp.work_condition'),
        ),
        migrations.CreateModel(
            name='Message_Hitory',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.IntegerField(db_column='owner_id')),
                ('other_owner_id', models.IntegerField(db_column='other_owner_id')),
            ],
            options={
                'db_table': 'message_hitory',
                'unique_together': {('owner_id', 'other_owner_id')},
            },
        ),
    ]
